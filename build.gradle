// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
  ext {

    def properties = new Properties()
    def file = project.rootProject.file('local.properties')
    if(file.exists()) {
      properties.load(file.newDataInputStream())
    }
    mvnUrl = properties.getProperty('mvn.url')

    //properties used in build scripts
    android_build_min_sdk_version = 19
    android_build_target_sdk_version = 28
    android_build_sdk_version = 28
    android_support_library_version = '28.0.0'
    android_support_constraint_layout_version = '1.0.2'
    flavor_dimension = 'environments.flavor'

    kotlin_version = '1.3.31'
    junit_version = '4.12'
    mockito_version = '1.10.19'
    powermockito_version = '1.6.6'
    test_runner_version = '1.0.2'
    espresso_core_version = '3.0.2'
    robolectric_version = '4.3'
    androidx_test_version = '1.2.0'
    json_version = '20180130'
    svg_version = '1.4'

    supportDependencies = [
        appCompat: "com.android.support:appcompat-v7:$android_support_library_version",
        v4: "com.android.support:support-v4:$android_support_library_version",
        annotations: "com.android.support:support-annotations:$android_support_library_version",
        constraintLayout: "com.android.support.constraint:constraint-layout:$android_support_constraint_layout_version",
        webkit: "com.android.support:webkit:$android_support_library_version",
        kotlin: "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version",
        design: "com.android.support:design:$android_support_library_version",
        svg: "com.caverock:androidsvg-aar:$svg_version"
    ]

    javaDependencies = [
        json: "org.json:json:$json_version"
    ]

    testDependencies = [
        junit: "junit:junit:$junit_version",
        mockito: "org.mockito:mockito-core:$mockito_version",
        mockitoJunit: "org.powermock:powermock-module-junit4:$powermockito_version",
        mockitoAll: "org.mockito:mockito-all:$mockito_version",
        powermockMockito: "org.powermock:powermock-api-mockito:$powermockito_version",
        powermockMockitoCommon: "org.powermock:powermock-api-mockito-common:$powermockito_version",
        powerMockitoJUnit: "org.powermock:powermock-module-junit4:$powermockito_version",
        powerMockitoJnitRule: "org.powermock:powermock-module-junit4-rule:$powermockito_version",
        powerMockitoJnitAgent: "org.powermock:powermock-module-junit4-rule-agent:$powermockito_version",
        powerMockitoJnitXstream: "org.powermock:powermock-classloading-xstream:$powermockito_version",
        robolectric: "org.robolectric:robolectric:$robolectric_version",
        androidxTest: "androidx.test:core:$androidx_test_version",
    ]
  }

  repositories {
    maven { url mvnUrl ?: '' }
    google()
    jcenter()
  }

  dependencies {
    classpath 'com.android.tools.build:gradle:3.4.1'
    classpath 'org.jfrog.buildinfo:build-info-extractor-gradle:4.7.3'
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    classpath "org.jetbrains.kotlin:kotlin-android-extensions:$kotlin_version"

    // NOTE: Do not place your application dependencies here; they belong
    // in the individual module build.gradle files
  }
}

allprojects {
  repositories {
    maven { url mvnUrl ?: '' }
    google()
    jcenter()
  }

  group = GROUP
  version = VERSION_NAME
}

task clean(type: Delete) {
  delete rootProject.buildDir
}